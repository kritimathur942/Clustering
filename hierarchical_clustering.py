# -*- coding: utf-8 -*-
"""Hierarchical Clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZReIv3KcFuf1O-uo6uAOzrlJbqJeBnwt

# Hierarchical Clustering

## Importing libraries
"""

import pandas as pd
import numpy as np
import matplotlib as plt
import matplotlib.pyplot as plt

"""## Importing dataset"""

dataset = pd.read_csv('/content/Amazon.com Clusturing Model.csv')
X = dataset.iloc[:, 3:5].values

"""## Optimal number of clusters via DendoGram"""

import scipy.cluster.hierarchy as sch
dendrogram = sch.dendrogram(sch.linkage(X, method = 'ward'))
plt.title('Dendogram')
plt.xlabel('Age')
plt.ylabel('euclideian distance')

"""## Hierarchical Clustering Model Training on Training set"""

from sklearn.cluster import AgglomerativeClustering
hc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')
yhc = hc.fit_predict(X)

"""## Visualizing Clusters"""

plt.scatter(X[yhc==0, 0], X[yhc==0, 1], s = 100, c = 'magenta' , label = 'cluster 1')
plt.scatter(X[yhc==1, 0], X[yhc==1, 1], s = 100, c = 'red' , label = 'cluster 2')
plt.scatter(X[yhc==2, 0], X[yhc==2, 1], s = 100, c = 'blue' , label = 'cluster 3')
plt.scatter(X[yhc==3, 0], X[yhc==3, 1], s = 100, c = 'cyan' , label = 'cluster 4')
plt.scatter(X[yhc==4, 0], X[yhc==4, 1], s = 100, c = 'yellow' , label = 'cluster 5')
plt.scatter(X[yhc==5, 0], X[yhc==5, 1], s = 100, c = 'pink' , label = 'cluster 6')
plt.title('clustersof amazon')
plt.xlabel('annual income')
plt.ylabel('purchase rating')
plt.legend()
plt.show()